@model WedMockExam.Web.Models.ViewModels.Reservation.ReservationViewModel
@{
    ViewData["Title"] = "Create Reservation";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-calendar-plus me-2"></i>Create New Reservation
                        </h5>
                        <a asp-action="Index" class="btn btn-light btn-sm">
                            <i class="bi bi-arrow-left me-1"></i>Back to List
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger shadow-sm mb-4"></div>
                        <input type="hidden" asp-for="UserId" />

                        <div class="form-floating mb-4">
                            <select asp-for="WorkplaceId" class="form-select" required>
                                <option value="">Select a workplace...</option>
                                @foreach (var workplace in Model.AvailableWorkplaces)
                                {
                                    <option value="@workplace.WorkplaceId">
                                        Floor @workplace.Floor, Zone @workplace.Zone
                                    </option>
                                }
                            </select>
                            <label asp-for="WorkplaceId">
                                <i class="bi bi-building me-1"></i>Workplace
                            </label>
                            <span asp-validation-for="WorkplaceId" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <input asp-for="ReservationDate" type="date" class="form-control" required />
                            <label asp-for="ReservationDate">
                                <i class="bi bi-calendar3 me-1"></i>Reservation Date
                            </label>
                            <span asp-validation-for="ReservationDate" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-calendar-check me-2"></i>Create Reservation
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Set minimum date to today
        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.getElementById('ReservationDate');
            const today = new Date().toISOString().split('T')[0];
            dateInput.setAttribute('min', today);
        });

        // Check availability when date changes
        document.getElementById('ReservationDate').addEventListener('change', function() {
            const date = this.value;
            const userId = document.getElementById('UserId').value;
            
            fetch(`@Url.Action("CheckAvailability")?userId=${userId}&date=${date}`)
                .then(response => response.json())
                .then(data => {
                    const submitButton = document.querySelector('button[type="submit"]');
                    const warningDiv = this.parentNode.querySelector('.alert');
                    
                    if (!data.canReserve) {
                        submitButton.disabled = true;
                        if (!warningDiv) {
                            const warning = document.createElement('div');
                            warning.className = 'alert alert-warning shadow-sm mt-3';
                            warning.innerHTML = '<i class="bi bi-exclamation-triangle me-2"></i>You cannot make a reservation for this date.';
                            this.parentNode.appendChild(warning);
                        }
                    } else {
                        submitButton.disabled = false;
                        if (warningDiv) {
                            warningDiv.remove();
                        }
                    }
                });
        });
    </script>
} 